basePath: /api/v1
definitions:
  models.Dataset:
    properties:
      byte_count:
        example: 100000
        type: integer
      creation_time:
        example: "2000-01-01T00:00:00.000Z"
        type: string
      description:
        example: This is my awesome dataset
        type: string
      etag:
        example: QiKZCjFNeH22n9b0iC/ZoQ==
        type: string
      expiration:
        example: 3600s
        type: string
      field_count:
        example: 10000
        type: integer
      full_id:
        example: my-awesome-gcp-project-name:my-awesome-dataset-name
        type: string
      labels:
        example: '[key:value]'
        type: string
      last_modified_time:
        example: "2000-01-01T00:00:00.000Z"
        type: string
      latest_partition:
        example: "2000-01-01T00:00:00.000Z"
        type: string
      latest_partition_row_count:
        example: 1000000
        type: integer
      location:
        example: EU
        type: string
      name:
        example: my-awesome-dataset-name
        type: string
      owners:
        example: '[projectOwners]'
        type: string
      partition_count:
        example: 10000
        type: integer
      readers:
        example: '[projectReaders]'
        type: string
      row_count:
        example: 10000
        type: integer
      table_count:
        example: 1000
        type: integer
      writers:
        example: '[projectWriters]'
        type: string
    type: object
  models.Field:
    properties:
      description:
        example: This is my awesome field
        type: string
      mode:
        example: NULLABLE
        type: string
      name:
        example: my-awesome-field-name
        type: string
      type:
        example: INTEGER
        type: string
    type: object
  models.Partition:
    properties:
      count:
        example: 10000
        type: integer
      partitiontime:
        example: 2000-01-01 00:00:00 +0000 UTC
        type: string
    type: object
  models.Project:
    properties:
      byte_count:
        example: 100000
        type: integer
      dataset_count:
        example: 100
        type: integer
      field_count:
        example: 10000
        type: integer
      latest_partition:
        example: "2000-01-01T00:00:00.000Z"
        type: string
      latest_partition_row_count:
        example: 1000000
        type: integer
      name:
        example: my-awesome-gcp-project-name
        type: string
      partition_count:
        example: 10000
        type: integer
      row_count:
        example: 10000
        type: integer
      table_count:
        example: 1000
        type: integer
    type: object
  models.Table:
    properties:
      byte_count:
        example: 100000
        type: integer
      creation_time:
        example: "2000-01-01T00:00:00.000Z"
        type: string
      description:
        example: This is my awesome table
        type: string
      etag:
        example: QiKZCjFNeH22n9b0iC/ZoQ==
        type: string
      field_count:
        example: 10000
        type: integer
      full_id:
        example: my-awesome-gcp-project-name:my-awesome-dataset-name.my-awesome-table-name
        type: string
      labels:
        example: '[key:value]'
        type: string
      last_modified_time:
        example: "2000-01-01T00:00:00.000Z"
        type: string
      legacySQL:
        example: false
        type: boolean
      name:
        example: my-awesome-table-name
        type: string
      partition_count:
        example: 10000
        type: integer
      row_count:
        example: 10000
        type: integer
      time_partitioning:
        example: DAY
        type: string
    type: object
host: localhost:8081
info:
  contact: {}
  description: '{{.Description}}'
  license: {}
  title: GoBigQueryStats API
  version: "1.0"
paths:
  /projects:
    get:
      description: Get all the projects
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Project'
            type: array
      tags:
      - projects
  /projects/{project}:
    get:
      description: Get the specified project
      parameters:
      - description: Project ID
        in: path
        name: project
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Project'
            type: object
      tags:
      - projects
  /projects/{project}/datasets:
    get:
      description: Get all the datasets
      parameters:
      - description: Project ID
        in: path
        name: project
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Dataset'
            type: array
      tags:
      - projects
  /projects/{project}/datasets/{dataset}:
    get:
      description: Get the specified dataset
      parameters:
      - description: Project ID
        in: path
        name: project
        required: true
        type: string
      - description: Dataset ID
        in: path
        name: dataset
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Dataset'
            type: object
      tags:
      - projects
  /projects/{project}/datasets/{dataset}/tables:
    get:
      description: Get all the tables
      parameters:
      - description: Project ID
        in: path
        name: project
        required: true
        type: string
      - description: Dataset ID
        in: path
        name: dataset
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Table'
            type: array
      tags:
      - projects
  /projects/{project}/datasets/{dataset}/tables/{table}:
    get:
      description: Get the specified table
      parameters:
      - description: Project ID
        in: path
        name: project
        required: true
        type: string
      - description: Dataset ID
        in: path
        name: dataset
        required: true
        type: string
      - description: Table ID
        in: path
        name: table
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Table'
            type: object
      tags:
      - projects
  /projects/{project}/datasets/{dataset}/tables/{table}/fields:
    get:
      description: Get all the fields
      parameters:
      - description: Project ID
        in: path
        name: project
        required: true
        type: string
      - description: Dataset ID
        in: path
        name: dataset
        required: true
        type: string
      - description: Table ID
        in: path
        name: table
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Field'
            type: array
      tags:
      - projects
  /projects/{project}/datasets/{dataset}/tables/{table}/partitions:
    get:
      description: Get all the partitions
      parameters:
      - description: Project ID
        in: path
        name: project
        required: true
        type: string
      - description: Dataset ID
        in: path
        name: dataset
        required: true
        type: string
      - description: Table ID
        in: path
        name: table
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Partition'
            type: array
      tags:
      - projects
swagger: "2.0"
